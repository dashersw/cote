{"version":3,"sources":["../../src/components/directed-requester.js"],"names":["Requester","require","module","exports","DirectedRequester","constructor","advertisement","discoveryOptions","sock","send","socketSend","bind","args","requesterSock","socks","length","enqueue","data","responderId","Error","chosenNodeIndex","Object","values","discovery","nodes","findIndex","node","index","id","hasCallback","push","fn","pop","callbacks","write","pack"],"mappings":";;;;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AACvDK,EAAAA,WAAW,CAACC,aAAD,EAAgBC,gBAAhB,EAAkC;AACzC,UAAMD,aAAN,EAAqBC,gBAArB;AACA,SAAKC,IAAL,CAAUC,IAAV,GAAiB,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAjB;AACH;;AAEDD,EAAAA,UAAU,CAAC,GAAGE,IAAJ,EAAU;AAChB;AACA,UAAMC,aAAa,GAAG,KAAKL,IAA3B;AACA,QAAI,CAACK,aAAa,CAACC,KAAf,IAAwB,CAACD,aAAa,CAACC,KAAd,CAAoBC,MAAjD,EAAyD,OAAO,KAAKP,IAAL,CAAUQ,OAAV,CAAkBJ,IAAlB,CAAP;AAEzD,UAAMK,IAAI,GAAGL,IAAI,CAAC,CAAD,CAAjB;;AACA,QAAI,CAACK,IAAI,CAACC,WAAV,EAAuB;AACnB,YAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;AACH,KARe,CAUhB;;;AACA,QAAIC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKC,SAAL,CAAeC,KAA7B,EAAoCC,SAApC,CAA8C,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjF,aAAOD,IAAI,CAACE,EAAL,IAAWX,IAAI,CAACC,WAAvB;AACH,KAFqB,CAAtB;AAGA,QAAIV,IAAI,GAAGK,aAAa,CAACC,KAAd,CAAoBM,eAApB,CAAX,CAdgB,CAgBhB;;AACA,QAAI,CAACZ,IAAL,EAAW,OAAO,KAAKA,IAAL,CAAUQ,OAAV,CAAkBJ,IAAlB,CAAP,CAjBK,CAmBhB;;AACA,QAAIiB,WAAW,GAAG,cAAc,OAAOjB,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAA3C;AACA,QAAI,CAACc,WAAL,EAAkBjB,IAAI,CAACkB,IAAL,CAAU,YAAW,CAAE,CAAvB;AAClB,QAAIC,EAAE,GAAGnB,IAAI,CAACoB,GAAL,EAAT;AACAD,IAAAA,EAAE,CAACH,EAAH,GAAQf,aAAa,CAACe,EAAd,EAAR;AACAf,IAAAA,aAAa,CAACoB,SAAd,CAAwBF,EAAE,CAACH,EAA3B,IAAiCG,EAAjC;AACAnB,IAAAA,IAAI,CAACkB,IAAL,CAAUC,EAAE,CAACH,EAAb,EAzBgB,CA2BhB;;AACA,WAAOhB,IAAI,CAAC,CAAD,CAAJ,CAAQM,WAAf,CA5BgB,CA8BhB;;AACAV,IAAAA,IAAI,CAAC0B,KAAL,CAAWrB,aAAa,CAACsB,IAAd,CAAmBvB,IAAnB,CAAX;AACH;;AAtCsD,CAA3D","sourcesContent":["const Requester = require('./requester');\n\nmodule.exports = class DirectedRequester extends Requester {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n        this.sock.send = this.socketSend.bind(this);\n    }\n\n    socketSend(...args) {\n        // Enqueue if no socks connected yet\n        const requesterSock = this.sock;\n        if (!requesterSock.socks || !requesterSock.socks.length) return this.sock.enqueue(args);\n\n        const data = args[0];\n        if (!data.responderId) {\n            throw new Error('send() needs a \"responderId\" property when using DirectedRequester');\n        }\n\n        // Find Node\n        let chosenNodeIndex = Object.values(this.discovery.nodes).findIndex((node, index) => {\n            return node.id == data.responderId;\n        });\n        let sock = requesterSock.socks[chosenNodeIndex];\n\n        // Enqueue if the correct sock did not connect yet/does not exist\n        if (!sock) return this.sock.enqueue(args);\n\n        // Save callback\n        let hasCallback = 'function' == typeof args[args.length - 1];\n        if (!hasCallback) args.push(function() {});\n        let fn = args.pop();\n        fn.id = requesterSock.id();\n        requesterSock.callbacks[fn.id] = fn;\n        args.push(fn.id);\n\n        // Remove responderId from message\n        delete args[0].responderId;\n\n        // Send over sock\n        sock.write(requesterSock.pack(args));\n    };\n};\n"],"file":"directed-requester.js"}